#!/usr/bin/env ruby

require "tty-prompt"
require "tty-table"

require_relative "db"
require_relative "initializer"
require_relative "parser"

@db = DB.new
@prompt = TTY::Prompt.new

def start(name = "")
  name = @prompt.ask("Name:") if name.nil?
  fail("#{name} is already active") if @db.active?(name)
  now = Time.now
  @db.start(
    id: now.hash,
    type: "start",
    reference: nil,
    timestamp: now,
    name: name
  )
end

def stop(name)
  if name.nil?
    names_active = @db.names_active
    fail("nothing to stop") if names_active.empty?
    name = @prompt.select("Select activity", names_active, filter: true)
  else
    fail("#{name} is not active") if !@db.active?(name)
  end
  @db.stop(name)
end

def show_active
  active = @db.active
  table = TTY::Table.new(["Name", "Started"], active)
  puts table.render(:unicode)
end

def show_report
  all = Parser.new(@db.all).parse
  table = TTY::Table.new(["Name", "Started"], all)
  puts table.render(:unicode)
end

def fail(message)
  puts "tt: #{message}"
  exit 1
end

case ARGV.first
when nil
  show_active
  exit
when "active"
  show_active
  exit
when "all", "show"
  show_report
  exit
when "init"
  Initializer.init
  exit
when "start"
  start(ARGV[1])
  exit
when "stop"
  stop(ARGV[1])
  exit
else
  fail("command not found: #{ARGV.first}")
  exit 1
end

